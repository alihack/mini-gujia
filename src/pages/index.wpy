<style lang="less">
@keyframes fadeUp {	
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}
.container {
	.location {
		margin-top:10rpx;
		padding:10rpx;
		display: flex;
		align-items: center;
		.address {
			width: 30rpx;
			height: 30rpx;
			margin-right: 10rpx;
		}
		.triangle {
			width: 20rpx;
			height: 15rpx;
			margin-left: 10rpx;
		}
	}
	.title {
		margin: 50rpx 0; 
		font-size: 23px;
		font-family: bold;
	}
	.tips {
		display: flex;
		width: 690rpx;
		justify-content: space-between;
		margin-top:30rpx;
		margin-bottom: 10rpx;
		font-size: 13px;
		color:#666666;
		.border {
			width: 240rpx;
			height: 18rpx;
			border-bottom: 1px solid #e5e5e5;
		}
	}
	.box {
		margin-top:20rpx;
		width: 690rpx;
		min-height: 225rpx;
		background: #fff;
		box-sizing: border-box;
		border-radius: 10rpx;
		padding: 20rpx 30rpx;
		&-head {
			display: flex;
			.building {
				font-size:18px;
				font-weight: bold;
				width: 390rpx;
			}
			.room {
				margin:10rpx 0 0 10rpx;
				font-size: 13px;
				color:#888888;
				width: 350rpx;
			}
		}
		&-main {
			display: flex;
			justify-content: space-between;
			align-items: center;
			color:#ff9c00;
			height: 100rpx;
			.arrow {
				width:50rpx;
				height:50rpx;
			}
			.price {
				.number {
					font-size: 40px;
				}
				.unit {
					margin-top:30rpx;
					margin-left:10rpx;
				}
			}
		}
		&-foot {
			display: flex;
			align-items: flex-end;
			.icon {
				width:40rpx;
				height: 40rpx;
			}
			.text {
				font-size: 13px;
				color:#888888;
			}
		}
	}
	.box:last-child{
		margin-bottom: 30rpx;
	}
	.panel {
		margin-top:20rpx;
		margin-bottom: 50rpx;
		background: #fff;
		width: 690rpx;
		border-radius: 10rpx;
		font-size: 16px;
		.cell {
			display:flex;
			justify-content: space-between;
			padding:30rpx;
			border-top:1px solid #e5e5e5;
			&-head {
				display: flex;
				.red {
					color: red
				}
				&-title {
					width: 75rpx;
				}
				&-content {
					margin-left:30rpx;
					input {
						width: 490rpx;
					}
				}
			}
			&-foot {
				width:40rpx;
				height:40rpx;
			}
		}
		.noborder {
			border:none;
		}
		&-tips {
			margin-top:25rpx;
			font-size: 12px;
			color:#cecece;
			text-align: center;
		}
	}
	.animation-1s {
		animation: fadeUp 1s;
	}
	.animation-2s {
		animation: fadeUp 2s;
	}
	.authorModal {
		position: absolute;
		display: flex;
		flex-direction: column;
		width: 540rpx;
		height: 440rpx;
		top: 340rpx;
		left: 100rpx;
		z-index: 2000;
		background: #FFFFFF;
		border-radius: 20rpx;
		padding: 20rpx 30rpx;
		box-sizing: border-box;
		&-main {
			margin-top:20rpx;
			font-size: 20px;
			letter-spacing: 1rpx;
			padding: 20rpx;
			.txt {
				font-weight: bold;
			}
			.tip {
				font-size: 12px;
				margin: 40rpx 0;
			}
			button {
				width:100%;
				margin-top:50rpx;
			}
		}
	}
	.author_screen {
		width: 100%;
		height: 100%;
		position: fixed;
		top: 0;
		left: 0;
		background: #000;
		opacity: 0.5;
		overflow: hidden;
		z-index: 1000;
		color: #fff;
	}
}
</style>
<template>
	<view class="container">
		<view class="location" @tap="chooseCity">
			<image class="address" src="../images/address.png"/>
			<view>厦门</view>
			<image class="triangle" src="../images/triangle.png"/>
		</view>
		<view class="title">算算房子值多少钱</view>
		<view class="animation-2s">
			<view class="panel">
				<view class="cell noborder" @tap="goSearch">
						<view class="cell-head">
							<view class="cell-head-title {{titleBeRed[0] ? 'red' : ''}}">小区</view>
							<view class="cell-head-content">{{currentCommunity.Name}}</view>
						</view>
						<image class="cell-foot" src="../images/next.png"/>
					</view>
				<view class="cell">
					<view class="cell-head">
							<view class="cell-head-title {{titleBeRed[1] ? 'red' : ''}}">面积</view>
							<view class="cell-head-content">
								<input placeholder="请输入"  bindblur="onAreaBlur" value="{{areaValue}}" type="number"/>
							</view>
						</view>
					<view><text>m</text><text class="sup-text">2</text></test></view>
				</view>
				<picker mode="multiSelector" bindchange="onTypeChange"  range="{{houseTypeArry}}">
					<view class="cell">
						<view class="cell-head">
							<view class="cell-head-title {{titleBeRed[2] ? 'red' : ''}}">户型</view>
							<view class="cell-head-content">{{typeValue}}</view>
						</view>
						<image class="cell-foot" src="../images/next.png"/>
					</view>
				</picker>
				<picker bindchange="onOrientationChange"  range="{{orientationArry}}">
					<view class="cell">
						<view class="cell-head">
							<view class="cell-head-title {{titleBeRed[3] ? 'red' : ''}}">朝向</view>
							<view class="cell-head-content">{{orientationValue}}</view>
						</view>
						<image class="cell-foot" src="../images/next.png"/>
					</view>
				</picker>
				<picker mode="multiSelector" bindchange="onStoreyChange"  range="{{storeyArry}}">
					<view class="cell">
						<view class="cell-head">
							<view class="cell-head-title {{titleBeRed[4] ? 'red' : ''}}">楼层</view>
							<view class="cell-head-content">{{storeyValue}}</view>
						</view>
						<image class="cell-foot" src="../images/next.png"/>
					</view>
				</picker>
			</view>
			<view class="button" @tap="goResult">估算价值</view>
			<view class="panel-tips">估价结果基于海量真实房源交易数据得出</view>
		</view>
		<!-- 有估价历史 -->
		<view class="animation-2s" wx:if="{{historyList.length != 0}}">
			<view class="tips">
				<view class="border"></view>
				<text>我的估价历史</text>
				<view class="border"></view>
			</view>
			<view class="box" @tap="goDeatil({{index}})" wx:for="{{historyList}}" wx:key="index">
				<view class="box-head">
					<view class="building">{{item.community_name}}</view>
					<view class="room">
						{{item.house_type}} 
						{{item.acreage}}m<text class="sup-text">2</text>
					</view>
				</view>
				<view class="box-main">
					<view class="price">
						<text class="number">{{item.total_price}}</text>
						<text class="unit">万</text>
					</view>
					<image class="arrow" src="../images/next.png"/>
				</view>
				<view class="box-foot">
					<view class="text" wx:if="{{item.ratio}}">{{item.ratio}}</view>
					<view class="text" wx:else>暂无环比</view>
					<image class="icon" src="{{item.ratioIconSrc}}"></image>
				</view>
			</view>
		</view>
		<!-- 模拟授权弹窗 -->
		<view class="authorModal animation-1s" wx:if="{{showAuthorModal}}">
			<view class="authorModal-main">
				<view class="txt">精确价格评估</view>
				<view class="txt">买卖心中有数</view>
				<view class="tip">房牛估价将对您的授权信息严格保密</view>
				<button class="button" open-type="getUserInfo" @getuserinfo="getUserInfo">马上计算房屋价格</button>
			</view>
		</view>
		<view class="author_screen" wx:if="{{showAuthorModal}}"></view>
	</view>
</template>

<script>
import wepy from 'wepy'
import api from '../utils/api'
import {getUserId, getUserInfo, dataController} from '../utils/util'
import {houseTypeArry, orientationArry, storeyArry} from '../utils/config'
export default class Index extends wepy.page {
config = {
	navigationBarTitleText: '房牛估价',
	navigationBarBackgroundColor: '#f5f5f5',
	backgroundColor: '#f5f5f5'
}
components = {
}

data = {
	showAuthorModal: false,
	currentCommunity: {},
	currentCity: {},
	historyList: [],
	currentData: '',
	titleBeRed: [0, 0, 0, 0, 0],
	// 以下为表单所需数据
	houseTypeArry,
	orientationArry,
	storeyArry,
	typeValue: '',
	areaValue: '',
	orientationValue: '',
	storeyValue: '',
	allStorey: '',
}

computed = {
}
onPullDownRefresh () {
    wx.stopPullDownRefresh()
}
async refresh () {
	const uid = await getUserId()
	if (!uid) {
		this.showAuthorModal = true
		this.$apply()
		return
	}
	this.showAuthorModal = false
	await getUserInfo()
	await this.methods.getEvaluationHistory()
	this.$apply()
	// await getLocation()
	// this.currentCity = wx.getStorageSync('locationInfo')
}
async onShow() {
	this.refresh()
	this.currentCommunity = wx.getStorageSync('currentCommunity')
	if (this.currentCommunity) this.titleBeRed[0] = 0
	wx.removeStorageSync('currentCommunity')
	this.$apply()
}
methods = {
	getEvaluationHistory: () => {
		return new Promise(async resolve => {
			const {data: {list}} = await wepy.request({
				url: api['getEvaluationHistory'],
				data: {
					uid: wepy.$instance.globalData.myUserInfo.uid
				}
			})
			if (list) {
				this.historyList = list.slice(0, 3)
				// 对数据进行格式处理
				this.historyList.forEach(async ele => {
					const newData = await dataController(ele)
					ele = newData
				})
			}
			this.$apply()
			resolve()
		})
	},
	chooseCity() {
		wx.showToast({
			title: '当前只支持厦门地区',
			icon: 'none'
		})
		return
		wepy.navigateTo({url: 'cityList'})
	},
	async goResult () {
		// 检验表单
		this.titleBeRed = [0, 0, 0, 0, 0]
		if (!this.currentCommunity) {
			this.titleBeRed[0] = 1
			return
		}
		if (!parseFloat(this.areaValue)) {
			this.titleBeRed[1] = 1
			return
		}
		if (!this.typeValue) {
			this.titleBeRed[2] = 1
			return
		}
		if (!this.orientationValue) {
			this.titleBeRed[3] = 1
			return
		}
		if (!this.storeyValue) {
			this.titleBeRed[4] = 1
			return
		}
		// 提交表单
		const form = {}
		form.city_id = this.currentCommunity.AreaCode
		form.ProjectId = this.currentCommunity.Id
		form.community_name = this.currentCommunity.Name
		form.acreage = this.areaValue
		form.house_type = this.typeValue.replace(/[^0-9]/ig, '-').slice(0, 5)
		form.orientation = this.orientationValue
		form.storey = this.storeyValue + this.allStorey
		form.uid = wepy.$instance.globalData.myUserInfo.uid
		console.log(form)
		wx.showLoading({
			title: '估算中',
		})
		const {data} = await wepy.request({
			url: api['getHousePrice'],
			data: form
		})
		wx.hideLoading()
		if (!data.unit_price) {
			wx.showToast({
				title: '该小区暂无估价',
				icon: 'none'
			})
			return
		}
		// 对数据进行格式处理
		const newData = await dataController(data)
		newData.subscribe = '0'
		this.currentData = newData
		// 清空表单数据
		this.typeValue = ''
		this.areaValue = ''
		this.orientationValue = ''
		this.storeyValue = ''
		this.currentCity = {}
		wepy.navigateTo({url: 'evaluateResult'})
		this.$apply()
	},
	onTypeChange({detail: {value}}) {
		this.typeValue = this.houseTypeArry[0][value[0]] + this.houseTypeArry[1][value[1]] + this.houseTypeArry[2][value[2]]
		this.titleBeRed[2] = 0
	},
	onOrientationChange({detail: {value}}) {
		this.orientationValue = this.orientationArry[value]
		this.titleBeRed[3] = 0
	},
	onStoreyChange({detail: {value}}) {
		this.allStorey = this.storeyArry[1][value[1]]
		this.titleBeRed[4] = 0
		if (value[0] >= value[1]) {
			this.storeyValue = this.storeyArry[0][value[1]]
		} else {
			this.storeyValue = this.storeyArry[0][value[0]]
		}
	},
	onAreaBlur ({detail: {value}}) {
		if (!value) {
			this.areaValue = ''
			return
		}
		this.titleBeRed[1] = 0
		this.areaValue = value
	},
	goSearch() {
		wepy.navigateTo({url: 'searchCommunity'})
	},
	goDeatil(index) {
		this.currentData = this.historyList[index]
		wepy.navigateTo({url: 'evaluateResult'})
	},
	getUserInfo({detail}) {
		if (detail.iv) {
			wx.login({
				success: async (res) => {
					if (res.code) {
						wx.showLoading({title: '授权中'})
						await wepy.request({
							url: api['saveUser'],
							data: {
								code: res.code,
								encryptedData: detail.encryptedData,
								iv: detail.iv
							}
						})
						wx.hideLoading()
						this.showAuthorModal = false
						this.$apply()
						this.refresh()
					} else {
						console.log('登录失败！' + res.errMsg)
					}
				}
			})
		}
	}
}

events = {
}
}
</script>
