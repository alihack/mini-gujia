<style lang="less">
.container {
	height: 100%;
	background: #fff;
	.panel {
		width: 100%;
		box-sizing: border-box;
		padding:0 30rpx;
		.picker {
			width: 100%;
			height: 120rpx;
			display: flex;
			justify-content: space-between;
			align-items: center;
			border-bottom: 2rpx solid #e5e5e5;
			.head {
				font-size:18px;
				width:75%;
			}
			.foot {
				font-size: 16px;
			}
			.arrow {
				width: 15rpx;
				height: 15rpx;
				border-left:4rpx solid #888888;
				border-bottom:4rpx solid #888888;
				transform: rotate(-45deg);
				margin-bottom: 10rpx;
			}
		}
		.item {
			padding-top:50rpx;
			height: 158rpx;
			width: 100%;
			&-title {
				font-size:18px
			}
			&-kinds {
				font-size: 15px;
				display: flex;
				margin-top:25rpx;
				.kind {
					width: 158rpx;
					height: 70rpx;
					margin-right: 20rpx;
					border-radius: 10rpx;
					line-height: 70rpx;
					text-align: center;
					background: #f8f8f9;
					box-sizing: border-box;
				}
				.kind:last-child {
					margin-right: 0;
				}
				.selectedKind {
					border:1px solid #5dacff;
					background: #fff;
					line-height: 68rpx;
				}
			}
		}
		.button {
			margin-top:40rpx;
		}
	}
}
</style>
<template>
	<view class="container">
		<view class="panel">
			<picker bindchange="onPickerChange" value="{{index}}" mode = "date" fields="year">
				<view class="picker">
					<view class="head">建筑年代</view>
					<view class="foot">{{buildingYear}}年</view>
					<view class="arrow"></view>
				</view>
			</picker>
			<view class="item">
				<view class="item-title">建筑类型</view>
				<view class="item-kinds">
					<view class="kind {{item == buildingTypeValue? 'selectedKind':''}}" wx:for="{{buildingTypeArry}}" wx:key="index" @tap="setBuildingType({{item}})">{{item}}</view>
				</view>
			</view>
			<view class="item">
				<view class="item-title">装修类型</view>
				<view class="item-kinds">
					<view class="kind {{item == decoratioTypeValue? 'selectedKind':''}}" wx:for="{{decoratioTypeArry}}" wx:key="index" @tap="setDecoratioType({{item}})">{{item}}</view>
				</view>
			</view>
			<view class="item">
				<view class="item-title">额外面积</view>
				<view class="item-kinds">
					<view class="kind {{item == extraAreaValue? 'selectedKind':''}}" wx:for="{{extraAreaArry}}" wx:key="index" @tap="setExtraArea({{item}})">{{item}}</view>
				</view>
			</view>
			<view class="button" @tap="submit">提交</view>
		</view>
	</view>
</template>

<script>
import wepy from 'wepy'
import api from '../utils/api'
import {buildingTypeArry, decoratioTypeArry, extraAreaArry} from '../utils/config'
export default class Index extends wepy.page {
config = {
	navigationBarTitleText: '补充楼房信息',
	navigationBarBackgroundColor: '#f5f5f5'
}
components = {
}

data = {
	buildingTypeArry,
	decoratioTypeArry,
	extraAreaArry,
	buildingYear: '1998',
	buildingTypeValue: '',
	decoratioTypeValue: '',
	extraAreaValue: '',
	id: ''
}

computed = {
}
onLoad({id}) {
	this.id = id
}
methods = {
	goResult() {
		wepy.navigateTo({url: 'evaluateResult'})
	},
	onPickerChange ({detail: {value}}) {
		console.log(value)
		this.buildingYear = value
	},
	setBuildingType (item) {
		this.buildingTypeValue = item
	},
	setDecoratioType (item) {
		this.decoratioTypeValue = item
	},
	setExtraArea (item) {
		this.extraAreaValue = item
	},
	async submit() {
		await wepy.request({
			url: api['addHouseInfo'],
			data: {
				id: this.id,
				buildingYear: this.buildingYear,
				buildingType: this.buildingTypeValue,
				decoratioType: this.decoratioTypeValue,
				extraArea: this.extraAreaValue
			}
		})
		wx.showToast({
			title: '补充成功'
		})
		setTimeout(() => {
			wepy.navigateBack()
		}, 1000)
	}
}

events = {
}
}
</script>
